function [codename, pg, datestr] = pmlCodeRefs(codeIndFile)
% Return a list of all of the code files referenced in PML 
% along with the (hard cover) pages on which they are first referenced.
%
%% Input
% codeIndFile - path to the code.ind file generated by the
% latex "makeindex code" command.
% (default = 'C:\kmurphy\dropbox\PML\Text\code.ind')
%
%% Output
% codename - name of the file
% pg       - a cell array, each entry stores a list of the pages
% datestr  - a date string indicating the last time the codeIndFile was
%            modified. 

% This file is from pmtk3.googlecode.com

if nargin ==0
    codeIndFile =  fullfile(getConfigValue('PMTKpmlBookSource'), 'code.ind'); 
end
if ~exist(codeIndFile, 'file');
   error('Could not find code.ind file - please recompile the book and make indexes');  
end

datestr = getFileModificationDate(codeIndFile); 
if ~exist(codeIndFile, 'file')
    error('Could not find %s. Check the path and try recompiling the latex source and/or regenerating the index with "makeindex code".', codeIndFile);
end

text = getText(codeIndFile);

% In some cases, we have lines like
%  \item probitRegDemo, \hyperpage{205}, \hyperpage{213}, 
%  		\hyperpage{275}
% where some of the pages spill onto the next line.
% These will get cut by the following:

text = filterCell(text, @(s)startswith(strtrim(s), '\item'));
text = cellfuncell(@(c)c(9:end), text); % remove '    \item'
nrefs = numel(text);
codename = cell(nrefs, 1);
pg = cell(nrefs, 1);
for i=1:nrefs
  % text{i}  = shrunkenCentroidsSRBCTdemo, \hyperpage{139, 140}
    %a = regexp(text{i}, '\w+', 'match')
    %a =    'shrunkenCentroidsSRBCTdemo'    'hyperpage'    '139'    '140'
    % Might also have
    % text{i} = probitRegDemo, \hyperpage{205}, \hyperpage{213}, 
    tmp = regexp(text{i}, '\w+', 'match');
    codename{i} = tmp{1};
    nums = [];
    for j=2:numel(tmp)
      if ~strcmp(tmp{j}, 'hyperref')
        nums = [nums str2num(tmp{j})];
      end
    end
    pg{i} = nums; % cellfun(@str2num, tmp(3:end))';
    
    %{
    % Each line has form 
   % Without hyperref: 'functioname, pagnnum, pgnum, ...'
    toks = tokenize(text{i}, ' ,');
    toks = filterCell(toks, @(c)~isempty(c)); 
    codename{i} = toks{1};
    pg{i} = cellfun(@str2num, toks(2:end))';
   %}
end


end
