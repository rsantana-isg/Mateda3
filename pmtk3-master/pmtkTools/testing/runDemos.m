%% This file is auto-generated by makeRunDemos
disp('running agglomDemo.m');
 try
 agglomDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running alarmDgmTimingComparison.m');
 try
 alarmDgmTimingComparison; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running alarmNetworkFitTest.m');
 try
 alarmNetworkFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running alarmTest.m');
 try
 alarmTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running amazonSellerDemo.m');
 try
 amazonSellerDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running anscombe.m');
 try
 anscombe; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running arsDemo.m');
 try
 arsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running arsEnvelope.m');
 try
 arsEnvelope; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesChangeOfVar.m');
 try
 bayesChangeOfVar; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesfactorGeneDemo.m');
 try
 bayesfactorGeneDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesFactorHandedness.m');
 try
 bayesFactorHandedness; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesLinRegDemo2d.m');
 try
 bayesLinRegDemo2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesRiskDemo.m');
 try
 bayesRiskDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesTtestDemo.m');
 try
 bayesTtestDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bayesVsErmDemo.m');
 try
 bayesVsErmDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running belPropTest.m');
 try
 belPropTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bernoulliBetaSequentialUpdate.m');
 try
 bernoulliBetaSequentialUpdate; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bernoulliEntropyFig.m');
 try
 bernoulliEntropyFig; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaBinomPostPredDemo.m');
 try
 betaBinomPostPredDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaCredibleInt.m');
 try
 betaCredibleInt; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaHPD.m');
 try
 betaHPD; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaMCdemo.m');
 try
 betaMCdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaPlotDemo.m');
 try
 betaPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running betaSampleDemo.m');
 try
 betaSampleDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running biasVarianceFigure.m');
 try
 biasVarianceFigure; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running biasVarModelComplexity.m');
 try
 biasVarModelComplexity; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running biasVarModelComplexity2.m');
 try
 biasVarModelComplexity2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running biasVarModelComplexity3.m');
 try
 biasVarModelComplexity3; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bigO.m');
 try
 bigO; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bimodalDemo.m');
 try
 bimodalDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running binaryFaDemoTipping.m');
 try
 binaryFaDemoTipping; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running binomDistPlot.m');
 try
 binomDistPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running binomialBetaPosteriorDemo.m');
 try
 binomialBetaPosteriorDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bleiLDAperplexityPlot.m');
 try
 bleiLDAperplexityPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bolassoSimpleDemo.m');
 try
 bolassoSimpleDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running bootstrapDemoBer.m');
 try
 bootstrapDemoBer; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running boundOptPicture.m');
 try
 boundOptPicture; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running boxplotMorley.m');
 try
 boxplotMorley; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running cancerRatesEb.m');
 try
 cancerRatesEb; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running cancerRatesMh.m');
 try
 cancerRatesMh; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running casinoDemo.m');
 try
 casinoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running catFAdemo.m');
 try
 catFAdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running catFAdemoAuto.m');
 try
 catFAdemoAuto; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running catFAtest.m');
 try
 catFAtest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running centralLimitDemo.m');
 try
 centralLimitDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running changeOfVarsDemo1d.m');
 try
 changeOfVarsDemo1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running changeOfVarsDemoPolar.m');
 try
 changeOfVarsDemoPolar; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running chisquaredTestDemo.m');
 try
 chisquaredTestDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running chowliuTreeDemo.m');
 try
 chowliuTreeDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running clusterYeast.m');
 try
 clusterYeast; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running coinBayesFactorDemo.m');
 try
 coinBayesFactorDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running coinsModelSelDemo.m');
 try
 coinsModelSelDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running confintDemo.m');
 try
 confintDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running conjugateFnExp.m');
 try
 conjugateFnExp; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running conjugateFnExpLowerBound.m');
 try
 conjugateFnExpLowerBound; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running conjugateFunction.m');
 try
 conjugateFunction; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running contoursSSEdemo.m');
 try
 contoursSSEdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running convexFnHand.m');
 try
 convexFnHand; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running convRateDemo.m');
 try
 convRateDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running crf2ChainTrainDemo.m');
 try
 crf2ChainTrainDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running crf2ImgTrainDemo.m');
 try
 crf2ImgTrainDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running crfFitStructDemo.m');
 try
 crfFitStructDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running cubicPlot.m');
 try
 cubicPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running curseDimensionality.m');
 try
 curseDimensionality; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dagStructLearnDemoCollegeCompleteData.m');
 try
 dagStructLearnDemoCollegeCompleteData; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dboundaries3bumps.m');
 try
 dboundaries3bumps; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running decisionBoundaryLinearVSwiggly.m');
 try
 decisionBoundaryLinearVSwiggly; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running deflationDemo.m');
 try
 deflationDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoFAemt.m');
 try
 demoFAemt; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoLagrange.m');
 try
 demoLagrange; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoMinfunc.m');
 try
 demoMinfunc; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoPeaksTraj.m');
 try
 demoPeaksTraj; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoRosen2d.m');
 try
 demoRosen2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoRosenConstrained.m');
 try
 demoRosenConstrained; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running demoRosenPlot2d.m');
 try
 demoRosenPlot2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running derivComplexTrick.m');
 try
 derivComplexTrick; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmDiscreteHmmFitTest.m');
 try
 dgmDiscreteHmmFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmGaussHmmFitTest.m');
 try
 dgmGaussHmmFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmGaussHmmFullyObsFitTest.m');
 try
 dgmGaussHmmFullyObsFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmLogprobTest.m');
 try
 dgmLogprobTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmMixGaussFitTest.m');
 try
 dgmMixGaussFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmMrf2Demo.m');
 try
 dgmMrf2Demo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmNaiveBayesFitTest.m');
 try
 dgmNaiveBayesFitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dgmNodeOrderDemo.m');
 try
 dgmNodeOrderDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dirichlet3dPlot.m');
 try
 dirichlet3dPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dirichlet3dPlotWedge.m');
 try
 dirichlet3dPlotWedge; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dirichletHistogramDemo.m');
 try
 dirichletHistogramDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running discreteDagSmallStructureLearnDemo.m');
 try
 discreteDagSmallStructureLearnDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running discreteProbDistFig.m');
 try
 discreteProbDistFig; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running discrimAnalysisDboundariesDemo.m');
 try
 discrimAnalysisDboundariesDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running discrimAnalysisFisherIrisDemo.m');
 try
 discrimAnalysisFisherIrisDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running discrimAnalysisHeightWeightDemo.m');
 try
 discrimAnalysisHeightWeightDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dpmGauss2dDemo.m');
 try
 dpmGauss2dDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dpmSampleDemo.m');
 try
 dpmSampleDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running dtreeDemoIris.m');
 try
 dtreeDemoIris; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running elasticDistortionsDemo.m');
 try
 elasticDistortionsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running elasticNetDemo.m');
 try
 elasticNetDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running emLogLikelihoodMax.m');
 try
 emLogLikelihoodMax; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running epigraph.m');
 try
 epigraph; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running errorCorrectingCodeDemo.m');
 try
 errorCorrectingCodeDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running faBiplotDemo.m');
 try
 faBiplotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running factorGraph2PairwiseTest.m');
 try
 factorGraph2PairwiseTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running fisherDiscrimVowelDemo.m');
 try
 fisherDiscrimVowelDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running fisheririsDemo.m');
 try
 fisheririsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running fisherLDAdemo.m');
 try
 fisherLDAdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running fwdBackDemo.m');
 try
 fwdBackDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gammaPlotDemo.m');
 try
 gammaPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gammaRainfallDemo.m');
 try
 gammaRainfallDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gauss2dMargCondPlot.m');
 try
 gauss2dMargCondPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussBayesMultiPoints.m');
 try
 gaussBayesMultiPoints; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussBayesUnequalCov.m');
 try
 gaussBayesUnequalCov; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussCondition2Ddemo.m');
 try
 gaussCondition2Ddemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussCondition2Ddemo2.m');
 try
 gaussCondition2Ddemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussEvec.m');
 try
 gaussEvec; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussHeightWeight.m');
 try
 gaussHeightWeight; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussianEllipsoids.m');
 try
 gaussianEllipsoids; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationCompare.m');
 try
 gaussImputationCompare; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationDemo.m');
 try
 gaussImputationDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationDemoColorHintonDiag.m');
 try
 gaussImputationDemoColorHintonDiag; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationDemoEM.m');
 try
 gaussImputationDemoEM; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationDemoOld.m');
 try
 gaussImputationDemoOld; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationGibbsDemo.m');
 try
 gaussImputationGibbsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationICMDemo.m');
 try
 gaussImputationICMDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussImputationPima.m');
 try
 gaussImputationPima; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInferMuSigmaDemo.m');
 try
 gaussInferMuSigmaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInferParamsMean1d.m');
 try
 gaussInferParamsMean1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInferParamsMean2d.m');
 try
 gaussInferParamsMean2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInterpDemo.m');
 try
 gaussInterpDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInterpDemo2.m');
 try
 gaussInterpDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInterpNoisyDemo.m');
 try
 gaussInterpNoisyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussInterpNoisyDemoOld.m');
 try
 gaussInterpNoisyDemoOld; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussPlot2Ddemo.m');
 try
 gaussPlot2Ddemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussPlot2dDemo2.m');
 try
 gaussPlot2dDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussPlotDemo.m');
 try
 gaussPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussSeqlUpdateMuSigma1D.m');
 try
 gaussSeqlUpdateMuSigma1D; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussSeqUpdateSigma1D.m');
 try
 gaussSeqUpdateSigma1D; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gaussVsStudentOutlierDemo.m');
 try
 gaussVsStudentOutlierDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running generativeVsDiscrim.m');
 try
 generativeVsDiscrim; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running geomRidge.m');
 try
 geomRidge; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running getCountsMarkovLanguageEx.m');
 try
 getCountsMarkovLanguageEx; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ggmFitDemo.m');
 try
 ggmFitDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ggmLassoDemo.m');
 try
 ggmLassoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gibbsDemoIsing.m');
 try
 gibbsDemoIsing; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gibbsDemoNoBlindspot.m');
 try
 gibbsDemoNoBlindspot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gibbsGauss2dDemo.m');
 try
 gibbsGauss2dDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gibbsGaussDemo.m');
 try
 gibbsGaussDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gibbsGaussParamsDemo.m');
 try
 gibbsGaussParamsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running giniDemo.m');
 try
 giniDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running glmnetDemo.m');
 try
 glmnetDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gmmSingularity.m');
 try
 gmmSingularity; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gpcDemo2d.m');
 try
 gpcDemo2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gpnnCov.m');
 try
 gpnnCov; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gpnnDemo.m');
 try
 gpnnDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gprDemoArd.m');
 try
 gprDemoArd; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gprDemoChangeHparams.m');
 try
 gprDemoChangeHparams; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gprDemoMarglik.m');
 try
 gprDemoMarglik; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gprDemoNoiseFree.m');
 try
 gprDemoNoiseFree; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running gpSpatialDemoLaplace.m');
 try
 gpSpatialDemoLaplace; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running graphicalIndepTest.m');
 try
 graphicalIndepTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running groupLassoDemo.m');
 try
 groupLassoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hastieCvsGammaDemo.m');
 try
 hastieCvsGammaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hclustYeastDemo.m');
 try
 hclustYeastDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running healthyLevels.m');
 try
 healthyLevels; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running heteroscedasticDataPlot.m');
 try
 heteroscedasticDataPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hingeLossPlot.m');
 try
 hingeLossPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hingePlot.m');
 try
 hingePlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmm2DgmTest.m');
 try
 hmm2DgmTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmDiscreteTest.m');
 try
 hmmDiscreteTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmGaussTest.m');
 try
 hmmGaussTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmLillypadDemo.m');
 try
 hmmLillypadDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmMixGaussTiedTest.m');
 try
 hmmMixGaussTiedTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmSelfLoopDist.m');
 try
 hmmSelfLoopDist; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hmmStudentTest.m');
 try
 hmmStudentTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running hoffNormalmsePlots.m');
 try
 hoffNormalmsePlots; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running huberLossDemo.m');
 try
 huberLossDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running icaDemo.m');
 try
 icaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running icaDemoUniform.m');
 try
 icaDemoUniform; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running invGammaPlotDemo.m');
 try
 invGammaPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running IPFdemo2x2.m');
 try
 IPFdemo2x2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running IPFdemo4Cycle.m');
 try
 IPFdemo4Cycle; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running IPFdemoIndep2d.m');
 try
 IPFdemoIndep2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running irmGraph.m');
 try
 irmGraph; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running isingImageDenoiseDemo.m');
 try
 isingImageDenoiseDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running isolatedWordClassificationWithHmmsDemo.m');
 try
 isolatedWordClassificationWithHmmsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running jensensInequalityFigure.m');
 try
 jensensInequalityFigure; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kalmanTrackingDemo.m');
 try
 kalmanTrackingDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kernelBinaryClassifDemo.m');
 try
 kernelBinaryClassifDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kernelRegrDemo.m');
 try
 kernelRegrDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kernelRegressionDemo.m');
 try
 kernelRegressionDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running KLfwdReverseMixGauss.m');
 try
 KLfwdReverseMixGauss; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running KLpqGauss.m');
 try
 KLpqGauss; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmeansDemoFaithful.m');
 try
 kmeansDemoFaithful; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmeansHeightWeight.m');
 try
 kmeansHeightWeight; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmeansModelSel1d.m');
 try
 kmeansModelSel1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmeansModelSel2d.m');
 try
 kmeansModelSel2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmeansYeastDemo.m');
 try
 kmeansYeastDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kmedoidsDemoFaithful.m');
 try
 kmedoidsDemoFaithful; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running knnClassifyDemo.m');
 try
 knnClassifyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running knnDensityEstimationDemo.m');
 try
 knnDensityEstimationDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running knnVoronoi.m');
 try
 knnVoronoi; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kpcaDemo.m');
 try
 kpcaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kpcaDemo2.m');
 try
 kpcaDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running kpcaScholkopf.m');
 try
 kpcaScholkopf; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running laplacePdfPlot.m');
 try
 laplacePdfPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running laplacePlotDemo.m');
 try
 laplacePlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running lassoPathProstate.m');
 try
 lassoPathProstate; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running lassoPathProstateClassif.m');
 try
 lassoPathProstateClassif; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running lassoPostPlot.m');
 try
 lassoPostPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ldaQdaDemoIris.m');
 try
 ldaQdaDemoIris; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running leastSquaresProjection.m');
 try
 leastSquaresProjection; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linesearchPerp.m');
 try
 linesearchPerp; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregAllSubsetsGraycodeDemo.m');
 try
 linregAllSubsetsGraycodeDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregBayesCaterpillar.m');
 try
 linregBayesCaterpillar; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregBFCaterpillar.m');
 try
 linregBFCaterpillar; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregCensoredSchmeeHahnDemo.m');
 try
 linregCensoredSchmeeHahnDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregDemo1.m');
 try
 linregDemo1; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregEbModelSelVsN.m');
 try
 linregEbModelSelVsN; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregFitL1Test.m');
 try
 linregFitL1Test; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregFreqCaterpillar.m');
 try
 linregFreqCaterpillar; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregGroupLassoDemo.m');
 try
 linregGroupLassoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregGroupLassoEmDemo.m');
 try
 linregGroupLassoEmDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregLogTransformDemo.m');
 try
 linregLogTransformDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregOnlineDemoKalman.m');
 try
 linregOnlineDemoKalman; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPolyLassoDemo.m');
 try
 linregPolyLassoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPolyVsDegree.m');
 try
 linregPolyVsDegree; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPolyVsN.m');
 try
 linregPolyVsN; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPolyVsRegDemo.m');
 try
 linregPolyVsRegDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPostPredDemo.m');
 try
 linregPostPredDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregPostPredLinearDemo.m');
 try
 linregPostPredLinearDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregRbfDemo.m');
 try
 linregRbfDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregRobustDemo.m');
 try
 linregRobustDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregRobustDemoCombined.m');
 try
 linregRobustDemoCombined; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregStudentStacklossDemo.m');
 try
 linregStudentStacklossDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregStudentTest.m');
 try
 linregStudentTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregWedgeDemo2.m');
 try
 linregWedgeDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running linregWeightedDemo.m');
 try
 linregWeightedDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running LMSdemo.m');
 try
 LMSdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running LMSdemoSimple.m');
 try
 LMSdemoSimple; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running localMinima1d.m');
 try
 localMinima1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logcon.m');
 try
 logcon; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregBasisFnDemo.m');
 try
 logregBasisFnDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregDemoGirolami.m');
 try
 logregDemoGirolami; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregFitL2DualTest.m');
 try
 logregFitL2DualTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregIrisDemo.m');
 try
 logregIrisDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregKernelDemo.m');
 try
 logregKernelDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregL2FitTest.m');
 try
 logregL2FitTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregLaplaceGirolamiDemo.m');
 try
 logregLaplaceGirolamiDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregMultinomKernelDemo.m');
 try
 logregMultinomKernelDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregMultinomKernelMinfuncDemo.m');
 try
 logregMultinomKernelMinfuncDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregMultinomMinfuncDemo.m');
 try
 logregMultinomMinfuncDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregSATdemo.m');
 try
 logregSATdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregSATdemoBayes.m');
 try
 logregSATdemoBayes; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregSatMhDemo.m');
 try
 logregSatMhDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregWeightedDemo.m');
 try
 logregWeightedDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregXorDemo.m');
 try
 logregXorDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running logregXorLinearDemo.m');
 try
 logregXorLinearDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running lossFunctionFig.m');
 try
 lossFunctionFig; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running lungcancerGMdemo.m');
 try
 lungcancerGMdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running makeData3cousins.m');
 try
 makeData3cousins; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running marsDemo.m');
 try
 marsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mcAccuracyDemo.m');
 try
 mcAccuracyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mcEstimatePi.m');
 try
 mcEstimatePi; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mcmcGmmDemo.m');
 try
 mcmcGmmDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mcmcMvn2d.m');
 try
 mcmcMvn2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mcQuantileDemo.m');
 try
 mcQuantileDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mdgGridDemoSutton.m');
 try
 mdgGridDemoSutton; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mdpGridDemoRussell.m');
 try
 mdpGridDemoRussell; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running memoryMapDemo.m');
 try
 memoryMapDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running miMixedDemo.m');
 try
 miMixedDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running minfuncRosen2dDemo.m');
 try
 minfuncRosen2dDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running misconceptionRank.m');
 try
 misconceptionRank; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixBerMnistEM.m');
 try
 mixBerMnistEM; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixBetaDemo.m');
 try
 mixBetaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixdirDemo3.m');
 try
 mixdirDemo3; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixDirDnaDemo.m');
 try
 mixDirDnaDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixDiscreteDemo.m');
 try
 mixDiscreteDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixexpDemo.m');
 try
 mixexpDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixexpDemoOneToMany.m');
 try
 mixexpDemoOneToMany; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussDemoFaithful.m');
 try
 mixGaussDemoFaithful; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussImputationDemo.m');
 try
 mixGaussImputationDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussImputationDemoOld.m');
 try
 mixGaussImputationDemoOld; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussImputationTest.m');
 try
 mixGaussImputationTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussLikelihoodConvexHull.m');
 try
 mixGaussLikelihoodConvexHull; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussLikSurfaceDemo.m');
 try
 mixGaussLikSurfaceDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussMLvsMAP.m');
 try
 mixGaussMLvsMAP; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussMultiModesPlot.m');
 try
 mixGaussMultiModesPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussOverRelaxedEmDemo.m');
 try
 mixGaussOverRelaxedEmDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussPlotDemo.m');
 try
 mixGaussPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussSingularity.m');
 try
 mixGaussSingularity; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixGaussVbDemoFaithful.m');
 try
 mixGaussVbDemoFaithful; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixPpcaDemoNetlab.m');
 try
 mixPpcaDemoNetlab; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mixStudentBankruptcyDemo.m');
 try
 mixStudentBankruptcyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpClassifDemo.m');
 try
 mlpClassifDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpClassifDemoSchmidt.m');
 try
 mlpClassifDemoSchmidt; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpPriorsDemo.m');
 try
 mlpPriorsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpRegEvidenceDemo.m');
 try
 mlpRegEvidenceDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpRegHmcDemo.m');
 try
 mlpRegHmcDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpRegressDemo.m');
 try
 mlpRegressDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpRegressDemoBishop.m');
 try
 mlpRegressDemoBishop; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mlpRegressDemoSchmidt.m');
 try
 mlpRegressDemoSchmidt; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mnistKNNdemo.m');
 try
 mnistKNNdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2ChainInferDemo.m');
 try
 mrf2ChainInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2ChainTrainDemo.m');
 try
 mrf2ChainTrainDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2CutsetInferDemo.m');
 try
 mrf2CutsetInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2ImgInferDemo.m');
 try
 mrf2ImgInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2ImgRgbInferDemo.m');
 try
 mrf2ImgRgbInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2ImgSmallInferDemo.m');
 try
 mrf2ImgSmallInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrf2NaiveInferDemo.m');
 try
 mrf2NaiveInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrfImageDenoisingApprox.m');
 try
 mrfImageDenoisingApprox; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrfImageDenoisingExact.m');
 try
 mrfImageDenoisingExact; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running mrfTest.m');
 try
 mrfTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running multilevelLinregDemo.m');
 try
 multilevelLinregDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running multinomIndepLogBF.m');
 try
 multinomIndepLogBF; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running multinomSamplePlotDemo.m');
 try
 multinomSamplePlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running naiveBayesBayesianDemo.m');
 try
 naiveBayesBayesianDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running naiveBayesBowDemo.m');
 try
 naiveBayesBowDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running naiveBayesMnistSample.m');
 try
 naiveBayesMnistSample; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running negBinomDemo.m');
 try
 negBinomDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running netflixResultsPlot.m');
 try
 netflixResultsPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newcombDemo.m');
 try
 newcombDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newcombPlugin.m');
 try
 newcombPlugin; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newcombPostPred.m');
 try
 newcombPostPred; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newsgroupsVisualize.m');
 try
 newsgroupsVisualize; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newtonIteration1d.m');
 try
 newtonIteration1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newtonsMethodMin1d.m');
 try
 newtonsMethodMin1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newtonsMethodMinQuad.m');
 try
 newtonsMethodMinQuad; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running newtonsMethodNonConvex.m');
 try
 newtonsMethodNonConvex; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running neymanPearson.m');
 try
 neymanPearson; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running neymanPearson2.m');
 try
 neymanPearson2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ngramPlot.m');
 try
 ngramPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running NIXdemo2.m');
 try
 NIXdemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running noisyMixDemo.m');
 try
 noisyMixDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running nonConvexFn.m');
 try
 nonConvexFn; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running normalGammaPenaltyPlotDemo.m');
 try
 normalGammaPenaltyPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running normalGammaPlotDemo.m');
 try
 normalGammaPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running normalGammaThresholdPlotDemo.m');
 try
 normalGammaThresholdPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running numbersGame.m');
 try
 numbersGame; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running optLowerbound.m');
 try
 optLowerbound; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running optMaxLambdaVal.m');
 try
 optMaxLambdaVal; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pagerankDemoPmtk.m');
 try
 pagerankDemoPmtk; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pagerankpow.m');
 try
 pagerankpow; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pairedTestDemo.m');
 try
 pairedTestDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pairedVsUnpairedTestDemo.m');
 try
 pairedVsUnpairedTestDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running paretoDemoTaxicab.m');
 try
 paretoDemoTaxicab; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running paretoPlot.m');
 try
 paretoPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running parzenWindowDemo.m');
 try
 parzenWindowDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running parzenWindowDemo2.m');
 try
 parzenWindowDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDemo2d.m');
 try
 pcaDemo2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDemo2dto10d.m');
 try
 pcaDemo2dto10d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDemo3d.m');
 try
 pcaDemo3d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDemoHeightWeight.m');
 try
 pcaDemoHeightWeight; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDigitsVis10classes.m');
 try
 pcaDigitsVis10classes; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaDigitsVisGrid.m');
 try
 pcaDigitsVisGrid; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaEmStepByStep.m');
 try
 pcaEmStepByStep; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaEmTest.m');
 try
 pcaEmTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaFaceDemo.m');
 try
 pcaFaceDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaImageDemo.m');
 try
 pcaImageDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running pcaTimingTest.m');
 try
 pcaTimingTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running peaksPlotDemo.m');
 try
 peaksPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running perfectElimDemo.m');
 try
 perfectElimDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running piecewiseLinearSurface.m');
 try
 piecewiseLinearSurface; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running plotMFCC.m');
 try
 plotMFCC; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running plotNoLocalMin.m');
 try
 plotNoLocalMin; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running plotPdfCdfDemo.m');
 try
 plotPdfCdfDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running poissonPlotDemo.m');
 try
 poissonPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running postDensityIntervals.m');
 try
 postDensityIntervals; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running powerCurvesDemo.m');
 try
 powerCurvesDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running powerMethodDemo.m');
 try
 powerMethodDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaDemo2d.m');
 try
 ppcaDemo2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaDemoNetlab.m');
 try
 ppcaDemoNetlab; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaDemoOilflowMissing.m');
 try
 ppcaDemoOilflowMissing; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaEmTest.m');
 try
 ppcaEmTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaEvidenceDemo.m');
 try
 ppcaEvidenceDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ppcaVBdemo.m');
 try
 ppcaVBdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running PRhand.m');
 try
 PRhand; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running probitPlot.m');
 try
 probitPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running probitRegDemo.m');
 try
 probitRegDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running probitVsLogregCrabsDemo.m');
 try
 probitVsLogregCrabsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running prostateComparison.m');
 try
 prostateComparison; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running prostateOLS.m');
 try
 prostateOLS; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running prostateScatterDemo.m');
 try
 prostateScatterDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running prostateSubsets.m');
 try
 prostateSubsets; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running qmrDemo.m');
 try
 qmrDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running qpDemo.m');
 try
 qpDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running quantileDemo.m');
 try
 quantileDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running randomWalk0to20Demo.m');
 try
 randomWalk0to20Demo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rankDefDemo.m');
 try
 rankDefDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rbfGramDemo.m');
 try
 rbfGramDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rbmClassifyDemo.m');
 try
 rbmClassifyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rbmDenoiseDemo.m');
 try
 rbmDenoiseDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rbpfManeuverDemo.m');
 try
 rbpfManeuverDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running readlines.m');
 try
 readlines; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running regtreeSurfaceDemo.m');
 try
 regtreeSurfaceDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rejectionSamplingDemo.m');
 try
 rejectionSamplingDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running relevanceNetworkNewsgroupDemo.m');
 try
 relevanceNetworkNewsgroupDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running residualsDemo.m');
 try
 residualsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ridgeLassoOLS.m');
 try
 ridgeLassoOLS; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ridgePathProstate.m');
 try
 ridgePathProstate; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ridgeSplineDemoCV.m');
 try
 ridgeSplineDemoCV; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ridgeTest.m');
 try
 ridgeTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running riskFnBernoulli.m');
 try
 riskFnBernoulli; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running riskFnGauss.m');
 try
 riskFnGauss; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running robustDemo.m');
 try
 robustDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running robustDiscrimAnalysisBankruptcyDemo.m');
 try
 robustDiscrimAnalysisBankruptcyDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running robustPdfPlot.m');
 try
 robustPdfPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running robustPriorDemo.m');
 try
 robustPriorDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ROChand.m');
 try
 ROChand; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rosen2d.m');
 try
 rosen2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running rotationDemo.m');
 try
 rotationDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saCoolingSchedule.m');
 try
 saCoolingSchedule; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saddle.m');
 try
 saddle; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saDemoCamel.m');
 try
 saDemoCamel; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saDemoHisto.m');
 try
 saDemoHisto; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saDemoMOG.m');
 try
 saDemoMOG; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running saDemoPeaks.m');
 try
 saDemoPeaks; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sampleCdf.m');
 try
 sampleCdf; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running samplingDistGaussShrinkage.m');
 try
 samplingDistGaussShrinkage; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running scadPlot.m');
 try
 scadPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sensorFusion2d.m');
 try
 sensorFusion2d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sensorFusionUnknownPrec.m');
 try
 sensorFusionUnknownPrec; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running seqlogoDemo.m');
 try
 seqlogoDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running shatteredSin.m');
 try
 shatteredSin; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running shrinkageDemoBaseball.m');
 try
 shrinkageDemoBaseball; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running shrinkcovDemo.m');
 try
 shrinkcovDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running shrunkenCentroidsSRBCTdemo.m');
 try
 shrunkenCentroidsSRBCTdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running shuffledDigitsDemo.m');
 try
 shuffledDigitsDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sigmoidBounds.m');
 try
 sigmoidBounds; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sigmoidLowerBounds.m');
 try
 sigmoidLowerBounds; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sigmoidPlot.m');
 try
 sigmoidPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sigmoidplot2D.m');
 try
 sigmoidplot2D; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sigmoidplot2D_new.m');
 try
 sigmoidplot2D_new; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running simpsonsParadoxGraph.m');
 try
 simpsonsParadoxGraph; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sliceSamplingDemo1d.m');
 try
 sliceSamplingDemo1d; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running smoothingKernelPlot.m');
 try
 smoothingKernelPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running softmaxDemo2.m');
 try
 softmaxDemo2; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sparseLinRegBabackDemo.m');
 try
 sparseLinRegBabackDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sparseLinRegMargDistDemo.m');
 try
 sparseLinRegMargDistDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sparseNnetDemo.m');
 try
 sparseNnetDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running spectralClusteringDemo.m');
 try
 spectralClusteringDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running splineBasisDemo.m');
 try
 splineBasisDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running splineDemoWiki.m');
 try
 splineDemoWiki; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running sprinklerGMdemo.m');
 try
 sprinklerGMdemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running ssmTimeSeriesSimple.m');
 try
 ssmTimeSeriesSimple; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running steepestDescentDemo.m');
 try
 steepestDescentDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running stickBreakingDemo.m');
 try
 stickBreakingDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running stream2text.m');
 try
 stream2text; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentFitDemo.m');
 try
 studentFitDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentFitMultiDemo.m');
 try
 studentFitMultiDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentLaplacePdfPlot.m');
 try
 studentLaplacePdfPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentPdfPlot.m');
 try
 studentPdfPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentPlotDemo.m');
 try
 studentPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running studentVsGauss.m');
 try
 studentVsGauss; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running subgradientPlot.m');
 try
 subgradientPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running subSuperGaussPlot.m');
 try
 subSuperGaussPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running surfaceFitDemo.m');
 try
 surfaceFitDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running svdImageDemo.m');
 try
 svdImageDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running svmLogregComparison.m');
 try
 svmLogregComparison; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running svmSmoothRegrDemo.m');
 try
 svmSmoothRegrDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running tabularFactorTest.m');
 try
 tabularFactorTest; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running tanhPlot.m');
 try
 tanhPlot; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running testLanguageClassifier.m');
 try
 testLanguageClassifier; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running testSprinklerDemo.m');
 try
 testSprinklerDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running text2stream.m');
 try
 text2stream; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running tikhonovDemo.m');
 try
 tikhonovDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running toposortDemo.m');
 try
 toposortDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running treeInferDemo.m');
 try
 treeInferDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running treeInferHmmDemo.m');
 try
 treeInferHmmDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running twoPowerCurves.m');
 try
 twoPowerCurves; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running unigaussVbDemo.m');
 try
 unigaussVbDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running unpairedTestHandednessDemo.m');
 try
 unpairedTestHandednessDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running varEMbound.m');
 try
 varEMbound; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running visDirichletGui.m');
 try
 visDirichletGui; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running visualizeAlarmNetwork.m');
 try
 visualizeAlarmNetwork; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running vqDemo.m');
 try
 vqDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running wiPlotDemo.m');
 try
 wiPlotDemo; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);

disp('running xwindowsDocVisualize.m');
 try
 xwindowsDocVisualize; 
 catch ME 
 disp(ME.message); 
 end 
 pclear(5.000000e-01);


